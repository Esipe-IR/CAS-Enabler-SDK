(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.upem = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var RCV_TOKEN="rcv::token";var GRAPH_URL="/graphql";var METHOD={POST:"POST",GET:"GET"};var UPEMSDK=function(){function UPEMSDK(userConfig){var defaultConfig={baseURL:"https://perso-etudiant.u-pem.fr/~vrasquie/api",debug:false};var c=Object.assign(defaultConfig,userConfig);var self=this;this.config=Object.freeze(c);this.callback={};window.addEventListener("message",function(event){var msg=event.data;if(!msg.type){return self.log("<= EventMessage (RcvError - No Type)",event)}if(msg.src==document.URL){return self.log("=> EventMessage (Send)",msg)}self.log("<= Event Message (RCV)",msg);if(typeof self.callback[msg.type]==="function"){return self.callback[msg.type](msg.data)}});this.log("INIT",this)}UPEMSDK.prototype.log=function(action,extra){if(this.config.debug){console.log("UPEM SDK"," - "+action+" - ",extra)}};UPEMSDK.prototype.call=function(config,callback){var xhr=new XMLHttpRequest;xhr.open(config.method,config.url,true);xhr.setRequestHeader("Content-type","application/x-www-form-urlencoded");xhr.responseType="json";var self=this;xhr.onreadystatechange=function(){if(xhr.readyState==4&&xhr.status==200){self.log("CALL",xhr.response);callback(xhr.response.data,xhr.response.errors)}};xhr.send(config.params)};UPEMSDK.prototype.getParams=function(query,variables){return JSON.stringify({query:query,variables:variables})};UPEMSDK.prototype.getHttpConfig=function(params,headers){return{url:this.config.baseURL+GRAPH_URL,method:METHOD.POST,params:params,headers:headers}};UPEMSDK.prototype.onToken=function(callback){if(typeof callback!=="function")throw new Error("callback should be a function");this.callback[RCV_TOKEN]=callback};UPEMSDK.prototype.getProjects=function(callback){var graph="query {\n      projects {\n        id\n        name\n      }\n    }";var params=this.getParams(graph);this.call(this.getHttpConfig(params),callback)};UPEMSDK.prototype.getResources=function(projectId,callback){var graph="query($projectId: Int!) {\n      resources(projectId: $projectId) {\n        id\n        name\n      }\n    }";var params=this.getParams(graph,{projectId:projectId});this.call(this.getHttpConfig(params),callback)};UPEMSDK.prototype.getResource=function(projectId,id,callback){var graph="query($projectId: Int!, $id: Int!) {\n      resource(projectId: $projectId, id: $id) {\n        id\n        name\n        category\n      }\n    }";var params=this.getParams(graph,{projectId:projectId,id:id});this.call(this.getHttpConfig(params),callback)};UPEMSDK.prototype.getResourceWithEvents=function(projectId,id,startDate,endDate,callback){var graph="query($projectId: Int!, $id: Int!, $startDate: String!, $endDate: String!) {\n      resource(projectId: $projectId, id: $id) {\n        id\n        name\n        category\n        events(projectId: $projectId, startDate: $startDate, endDate: $endDate) {\n          id\n          name\n          startHour\n          endHour\n          instructor\n          classroom\n          class\n          date\n          color\n        }\n      }\n    }";var params=this.getParams(graph,{projectId:projectId,id:id,startDate:startDate,endDate:endDate});this.call(this.getHttpConfig(params),callback)};UPEMSDK.prototype.getEvents=function(projectId,resource,startDate,endDate,callback){var graph="query(\n      $projectId: Int!,\n      $resource: Int!,\n      $startDate: String!,\n      $endDate: String!\n    ) {\n      events(\n        projectId: $projectId,\n        resources: $resource,\n        startDate: $startDate,\n        endDate: $endDate\n      ) {\n        id\n        name\n        startHour\n        endHour\n        instructor\n        classroom\n        class\n        date\n        color\n      }\n    }";var params=this.getParams(graph,{projectId:projectId,resource:resource,startDate:startDate,endDate:endDate});this.call(this.getHttpConfig(params),callback)};UPEMSDK.prototype.getUser=function(callback){var graph="query {\n      user {\n        uid\n      }\n    }";var params=this.getParams(graph);this.call(this.getHttpConfig(params),callback)};UPEMSDK.prototype.getGraph=function(graph,variables,callback){var url=this.config.baseURL+GRAPH_URL;var params=this.getParams(graph,variables);this.call(this.getHttpConfig(params),callback)};return UPEMSDK}();exports.UPEMSDK=UPEMSDK;

},{}]},{},[1])(1)
});